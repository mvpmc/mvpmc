#!/bin/sh
#
# mvpmc startup script
#

check_proc() {
    #/proc is needed for /bin/splash to determine PAL vs NTSC
    if ! [ -e /proc/mtd ]; then
	mount proc /proc -t proc
    fi
}

progress() {
    check_proc
    /bin/splash --progress $PROGRESS --state 1
    let PROGRESS=PROGRESS+1
}

progress_test() {
    check_proc
    /bin/splash --progress $PROGRESS --state 2
}

progress_done() {
    check_proc
    /bin/splash --progress $PROGRESS --state 3
}

PROGRESS=4

#
# Connect to the first available NTP server
#
do_ntp() {
    for i in $1 ; do
	/bin/ntpclient -s -h $i
	if [ $? -eq 0 ] ; then
	    /bin/ntpclient -d -l -h $i &
	    exit 0
	fi
    done
    exit 1
}

#
# Unmount everything in /etc/fstab
#
/bin/umount -a

#
# Unmount the old root device (in case we did a pivot_root already)
#
/bin/umount /oldroot
/sbin/freeramdisk /dev/ram0
progress

#
# Create the tmpfs filesystem and mount it on top of the squashfs root
# filesystem with unionfs.
#
mount -t tmpfs -o "size=1M" tmpfs /memory
mount -t unionfs -o dirs=/memory=rw:/=ro unionfs /union
cd /union
mkdir live
pivot_root . live
umount /live/proc
progress

#
# Remount everything read/write
#
/bin/mount -a -o rw

#
# Configure lo0
#
/sbin/ifconfig lo 127.0.0.1

#
# Check for a root password on the kernel command line
#
for i in `cat /proc/cmdline` ; do
    export mvp_$i
done
if [ "$mvp_mvpmc_root" != "" ] ; then
    if [ "$mvp_mvpmc_root" != "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ] ; then
	echo "root:${mvp_mvpmc_root}:0:0:root:/:/bin/sh" > /etc/passwd
    fi
fi

#
# Start telnetd
#
/usr/sbin/telnetd

#
# default timezone to US Central
#
TZ=CST+6CDT,M3.2.0/2,M11.1.0/2; export TZ

#
# If the wireless device is enabled by default in flash, we should look
# for a dhcp server on eth1 first.
#
ticonfig -e
ETH1_ENABLED=$?
LEASE=0
ticonfig
if [ $ETH1_ENABLED -ne 0 ] ; then
    udhcpc -i eth0 -n
    if [ $? -eq 0 ] ; then
	LEASE=1
    fi
fi

#
# Iterate over the two devices waiting for one of them to get an address.
#
while [ $LEASE -eq 0 ] ; do
    progress_test
    udhcpc -i eth1 -n
    RET=$?
    progress_done
    if [ $RET -ne 0 ] ; then
	progress_test
	udhcpc -i eth0 -n
	RET=$?
	progress_done
    fi
    if [ $RET -eq 0 ] ; then
	LEASE=1
    fi
done

. /etc/udhcpc.config
progress

#
# Make sure the hostname is set to something
#
if [ "$HNAME" = "" ] ; then
    hostname $IP
else
    echo "${IP}    ${HNAME}" >> /etc/hosts
fi

#
# connect to an NTP server, if DHCP has provided a list of servers
#
if [ "$NTP" != "" ] ; then
    do_ntp "$NTP" &
    NTP=
fi

#
# create the user theme directory
#
mkdir /tmp/themes

#create the "UPnP" folder remove to disable auto djmount
mkdir /uPnP

#
# Download the users config and theme files, if they exist.
#
if [ -n "$DONGLE" ] ; then
    tftp -g -l /etc/dongle.config -r ${DONGLE}.config ${SERVER}    
    if [ -e "/etc/dongle.config" ] ; then
        tftp -g -l /tmp/themes/default.xml -r ${DONGLE}.xml ${SERVER}
        dos2unix -u /etc/dongle.config
        . /etc/dongle.config    
        if [ "$NOMVPMC" != "" ] ; then
            exit 0
        fi
    fi
fi
progress

#
# Free up some memory if the wireless device is not being used.
#
if [ "$ETH" == "eth0" ] ; then
    if [ "$TIWLAN_KEEP" == "" ] ; then
	/sbin/ifconfig eth1 down
	/sbin/rmmod tiwlan_drv
    fi
fi

#
# if the user has set NTP, restart NTP with their server
#
if [ "$NTP" != "" ] ; then
    killall ntpclient
    do_ntp "$NTP" &
fi



# If mvpmc is not running from the dhcp try other methods


if [ -z "`pidof mvpmc`" ] ; then
    #
    # First try and load dongle.bin.config from the named share on the dongle.bin server
    #     
    vpdread -t
    . /etc/tftp.config
    mkdir /etc/mvpmc
    mount.cifs "//${TFTP}/mvpmc" /etc/mvpmc -o guest,ro ;
    if [ -e "/etc/mvpmc/dongle.bin.config" ] ; then
        cp /etc/mvpmc/dongle.bin.config /etc/dongle.config
	dos2unix -u /etc/dongle.config
        . /etc/dongle.config
    fi
    #
    # mounting a share failed, try tftp from mvpconfig, a fixed hostname
    #
    if [ -z "`pidof mvpmc`" ] ; then    
        tftp -g -l /etc/dongle.config -r dongle.config mvpconfig
        if [ -e "/etc/dongle.config" ] ; then
	    dos2unix -u /etc/dongle.config        
            . /etc/dongle.config
        fi
    fi
    #
    # mounting a share failed lets try a tftp from the same server
    #   
    if [ -z "`pidof mvpmc`" ] ; then    
        tftp -g -l /etc/dongle.config -r dongle.bin.config ${TFTP}
        if [ -e "/etc/dongle.config" ] ; then
	    dos2unix -u /etc/dongle.config        
            . /etc/dongle.config
        fi
    fi
    
    #
    # If mvpmc is still not running, run it with some reasonable options.
    #
    if [ -z "`pidof mvpmc`" ] ; then
        if [ -z $SERVER ] ; then
            if [ -z $HOST ] ; then
    	        mvpmc -c ${TFTP} --startup setup --emulate ? &
            else
    	        mvpmc -c $HOST --vlc $HOST --emulate ? &
            fi    
        else        
    	    mvpmc -c $SERVER --vlc $SERVER --emulate ? &
        fi
    fi    
fi    


