#!/usr/bin/python
#
# build microwindows
#

import os
import mvpmc

Import('env')

machine = os.uname()[4]

build_target = env['TARG']
topdir = env['TOPDIR']
libdir = '%s/dongle/install/%s/lib/' % (topdir,build_target)
incdir = '%s/dongle/install/%s/include/' % (topdir,build_target)
prefix = '%s/dongle/install/%s' % (topdir,build_target)

if build_target == 'mvp':
    config = '--host=powerpc'
    patches = [	'patches/microwindows-0.91_abs.patch',
		'patches/microwindows-0.91.patch',
	        'patches/microwindows-0.91_no_demos.patch',
		'patches/microwindows-0.91_pixel_compat.patch']
    url = [ '%s/microwindows-src-0.91.tar.gz'%mvpmc.dlprefix,
	    'ftp://microwindows.censoft.com/pub/microwindows/microwindows-src-0.91.tar.gz' ]
else:
    config = ''
    patches = ['patches/microwindows_host.patch',
	       'patches/microwindows_fix_recent_x11.patch',
	       'patches/microwindows_no_demos.patch']
    if machine == 'ppc':
      patches.append('patches/microwindows_host_be.patch')
    url = [ 'http://www.mvpmc.org/~shyde/libs/microwindows-full-snapshot.tar.gz',
	    'ftp://microwindows.censoft.com/pub/microwindows/microwindows-full-snapshot.tar.gz' ]
  
e = Environment()

target = [ libdir + 'libnano-X.a' ]


mvpcmd = [ 'cp -p --remove-destination src/Configs/config.mvp src/config' ]

commoncmd = [	'cd src',
                'cp ../../../patches/*.c drivers',
                'cp -p include/*.h %s' % incdir,
                'make CFLAGS=-I%s LDFLAGS=-L%s' % (incdir,libdir),
                'cd ..',
                'cp -p src/lib/*.a %s' % libdir ]

if build_target == 'mvp':
    cmd = mvpcmd + commoncmd
else:
    cmd = commoncmd

build = mvpmc.OSSBuild(target, url, env, e, cmd, patches)

pwd = os.getcwd()
env.Depends(build, pwd + '/patches/scr_mvposd.c')
env.Depends(build, pwd + '/patches/kbd_irm.c')
env.Depends(build, incdir + '/mvp_osd.h')

env.SideEffect(incdir + '/nano-X.h', build)

Return('build')
